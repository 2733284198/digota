// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: order/orderpb/order.proto

/*
Package orderpb is a generated protocol buffer package.

It is generated from these files:
	order/orderpb/order.proto

It has these top-level messages:
	Order
	OrderItem
	Shipping
	OrderList
	NewRequest
	GetRequest
	PayRequest
	ReturnRequest
	ListRequest
*/
package orderpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import paymentpb "github.com/digota/digota/payment/paymentpb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type OrderStatus int32

const (
	Order_Created   OrderStatus = 0
	Order_Paid      OrderStatus = 1
	Order_Canceled  OrderStatus = 2
	Order_Fulfilled OrderStatus = 3
	Order_Returned  OrderStatus = 4
)

var OrderStatus_name = map[int32]string{
	0: "Created",
	1: "Paid",
	2: "Canceled",
	3: "Fulfilled",
	4: "Returned",
}
var OrderStatus_value = map[string]int32{
	"Created":   0,
	"Paid":      1,
	"Canceled":  2,
	"Fulfilled": 3,
	"Returned":  4,
}

func (x OrderStatus) String() string {
	return proto.EnumName(OrderStatus_name, int32(x))
}
func (OrderStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptorOrder, []int{0, 0} }

type OrderItem_Type int32

const (
	OrderItem_reserved OrderItem_Type = 0
	OrderItem_sku      OrderItem_Type = 1
	OrderItem_discount OrderItem_Type = 2
	OrderItem_tax      OrderItem_Type = 3
	OrderItem_shipping OrderItem_Type = 4
)

var OrderItem_Type_name = map[int32]string{
	0: "reserved",
	1: "sku",
	2: "discount",
	3: "tax",
	4: "shipping",
}
var OrderItem_Type_value = map[string]int32{
	"reserved": 0,
	"sku":      1,
	"discount": 2,
	"tax":      3,
	"shipping": 4,
}

func (x OrderItem_Type) String() string {
	return proto.EnumName(OrderItem_Type_name, int32(x))
}
func (OrderItem_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptorOrder, []int{1, 0} }

type ListRequest_Sort int32

const (
	ListRequest_Natural     ListRequest_Sort = 0
	ListRequest_CreatedDesc ListRequest_Sort = 1
	ListRequest_CreatedAsc  ListRequest_Sort = 2
	ListRequest_UpdatedDesc ListRequest_Sort = 3
	ListRequest_UpdatedAsc  ListRequest_Sort = 4
)

var ListRequest_Sort_name = map[int32]string{
	0: "Natural",
	1: "CreatedDesc",
	2: "CreatedAsc",
	3: "UpdatedDesc",
	4: "UpdatedAsc",
}
var ListRequest_Sort_value = map[string]int32{
	"Natural":     0,
	"CreatedDesc": 1,
	"CreatedAsc":  2,
	"UpdatedDesc": 3,
	"UpdatedAsc":  4,
}

func (x ListRequest_Sort) String() string {
	return proto.EnumName(ListRequest_Sort_name, int32(x))
}
func (ListRequest_Sort) EnumDescriptor() ([]byte, []int) { return fileDescriptorOrder, []int{8, 0} }

type Order struct {
	Id       string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	Amount   int64              `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency paymentpb.Currency `protobuf:"varint,3,opt,name=currency,proto3,enum=paymentpb.Currency" json:"currency,omitempty"`
	Items    []*OrderItem       `protobuf:"bytes,4,rep,name=items" json:"items,omitempty"`
	Metadata map[string]string  `protobuf:"bytes,5,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Email    string             `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	ChargeId string             `protobuf:"bytes,7,opt,name=chargeId,proto3" json:"chargeId,omitempty"`
	Status   OrderStatus        `protobuf:"varint,8,opt,name=Status,proto3,enum=orderpb.OrderStatus" json:"Status,omitempty"`
	Shipping *Shipping          `protobuf:"bytes,9,opt,name=shipping" json:"shipping,omitempty"`
	Created  int64              `protobuf:"varint,998,opt,name=created,proto3" json:"created,omitempty"`
	Updated  int64              `protobuf:"varint,999,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptorOrder, []int{0} }

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order) GetCurrency() paymentpb.Currency {
	if m != nil {
		return m.Currency
	}
	return paymentpb.Currency_CUR_RESERVED
}

func (m *Order) GetItems() []*OrderItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Order) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Order) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Order) GetChargeId() string {
	if m != nil {
		return m.ChargeId
	}
	return ""
}

func (m *Order) GetStatus() OrderStatus {
	if m != nil {
		return m.Status
	}
	return Order_Created
}

func (m *Order) GetShipping() *Shipping {
	if m != nil {
		return m.Shipping
	}
	return nil
}

func (m *Order) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Order) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type OrderItem struct {
	Type        OrderItem_Type     `protobuf:"varint,1,opt,name=type,proto3,enum=orderpb.OrderItem_Type" json:"type,omitempty" validate:"required,gte=1,lte=4"`
	Quantity    int64              `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty" validate:"omitempty,gte=0"`
	Amount      int64              `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency    paymentpb.Currency `protobuf:"varint,4,opt,name=currency,proto3,enum=paymentpb.Currency" json:"currency,omitempty" validate:"omitempty,gte=1,lte=128"`
	Parent      string             `protobuf:"bytes,5,opt,name=parent,proto3" json:"parent,omitempty" validate:"omitempty,uuid4"`
	Description string             `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *OrderItem) Reset()                    { *m = OrderItem{} }
func (m *OrderItem) String() string            { return proto.CompactTextString(m) }
func (*OrderItem) ProtoMessage()               {}
func (*OrderItem) Descriptor() ([]byte, []int) { return fileDescriptorOrder, []int{1} }

func (m *OrderItem) GetType() OrderItem_Type {
	if m != nil {
		return m.Type
	}
	return OrderItem_reserved
}

func (m *OrderItem) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *OrderItem) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderItem) GetCurrency() paymentpb.Currency {
	if m != nil {
		return m.Currency
	}
	return paymentpb.Currency_CUR_RESERVED
}

func (m *OrderItem) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *OrderItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Shipping struct {
	Name           string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phone          string            `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Address        *Shipping_Address `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Carrier        string            `protobuf:"bytes,4,opt,name=carrier,proto3" json:"carrier,omitempty"`
	TrackingNumber string            `protobuf:"bytes,5,opt,name=trackingNumber,proto3" json:"trackingNumber,omitempty"`
}

func (m *Shipping) Reset()                    { *m = Shipping{} }
func (m *Shipping) String() string            { return proto.CompactTextString(m) }
func (*Shipping) ProtoMessage()               {}
func (*Shipping) Descriptor() ([]byte, []int) { return fileDescriptorOrder, []int{2} }

func (m *Shipping) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Shipping) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Shipping) GetAddress() *Shipping_Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Shipping) GetCarrier() string {
	if m != nil {
		return m.Carrier
	}
	return ""
}

func (m *Shipping) GetTrackingNumber() string {
	if m != nil {
		return m.TrackingNumber
	}
	return ""
}

type Shipping_Address struct {
	Line1      string `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	City       string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Line2      string `protobuf:"bytes,4,opt,name=line2,proto3" json:"line2,omitempty"`
	PostalCode string `protobuf:"bytes,5,opt,name=postalCode,proto3" json:"postalCode,omitempty"`
	State      string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
}

func (m *Shipping_Address) Reset()                    { *m = Shipping_Address{} }
func (m *Shipping_Address) String() string            { return proto.CompactTextString(m) }
func (*Shipping_Address) ProtoMessage()               {}
func (*Shipping_Address) Descriptor() ([]byte, []int) { return fileDescriptorOrder, []int{2, 0} }

func (m *Shipping_Address) GetLine1() string {
	if m != nil {
		return m.Line1
	}
	return ""
}

func (m *Shipping_Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Shipping_Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Shipping_Address) GetLine2() string {
	if m != nil {
		return m.Line2
	}
	return ""
}

func (m *Shipping_Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Shipping_Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type OrderList struct {
	Orders []*Order `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
	Total  int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (m *OrderList) Reset()                    { *m = OrderList{} }
func (m *OrderList) String() string            { return proto.CompactTextString(m) }
func (*OrderList) ProtoMessage()               {}
func (*OrderList) Descriptor() ([]byte, []int) { return fileDescriptorOrder, []int{3} }

func (m *OrderList) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func (m *OrderList) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type NewRequest struct {
	Currency paymentpb.Currency `protobuf:"varint,1,opt,name=currency,proto3,enum=paymentpb.Currency" json:"currency,omitempty" validate:"required,gte=1,lte=128"`
	Items    []*OrderItem       `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" bson:"items" validate:"dive,required"`
	Metadata map[string]string  `protobuf:"bytes,3,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Email    string             `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty" validate:"omitempty,email"`
	Shipping *Shipping          `protobuf:"bytes,5,opt,name=shipping" json:"shipping,omitempty" validate:"omitempty,dive"`
}

func (m *NewRequest) Reset()                    { *m = NewRequest{} }
func (m *NewRequest) String() string            { return proto.CompactTextString(m) }
func (*NewRequest) ProtoMessage()               {}
func (*NewRequest) Descriptor() ([]byte, []int) { return fileDescriptorOrder, []int{4} }

func (m *NewRequest) GetCurrency() paymentpb.Currency {
	if m != nil {
		return m.Currency
	}
	return paymentpb.Currency_CUR_RESERVED
}

func (m *NewRequest) GetItems() []*OrderItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *NewRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *NewRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *NewRequest) GetShipping() *Shipping {
	if m != nil {
		return m.Shipping
	}
	return nil
}

type GetRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4,required"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptorOrder, []int{5} }

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PayRequest struct {
	Id                string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4,required"`
	Card              *paymentpb.Card             `protobuf:"bytes,2,opt,name=card" json:"card,omitempty" validate:"dive,required"`
	PaymentProviderId paymentpb.PaymentProviderId `protobuf:"varint,3,opt,name=paymentProviderId,proto3,enum=paymentpb.PaymentProviderId" json:"paymentProviderId,omitempty" validate:"required,gte=1,lte=1"`
}

func (m *PayRequest) Reset()                    { *m = PayRequest{} }
func (m *PayRequest) String() string            { return proto.CompactTextString(m) }
func (*PayRequest) ProtoMessage()               {}
func (*PayRequest) Descriptor() ([]byte, []int) { return fileDescriptorOrder, []int{6} }

func (m *PayRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PayRequest) GetCard() *paymentpb.Card {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *PayRequest) GetPaymentProviderId() paymentpb.PaymentProviderId {
	if m != nil {
		return m.PaymentProviderId
	}
	return paymentpb.PaymentProviderId_PROVIDER_Reserved
}

type ReturnRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"uuid4,required"`
}

func (m *ReturnRequest) Reset()                    { *m = ReturnRequest{} }
func (m *ReturnRequest) String() string            { return proto.CompactTextString(m) }
func (*ReturnRequest) ProtoMessage()               {}
func (*ReturnRequest) Descriptor() ([]byte, []int) { return fileDescriptorOrder, []int{7} }

func (m *ReturnRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListRequest struct {
	Page  int64            `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty" validate:"omitempty,required,gte=0"`
	Limit int64            `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty" validate:"omitempty,required,gt=0"`
	Sort  ListRequest_Sort `protobuf:"varint,3,opt,name=sort,proto3,enum=orderpb.ListRequest_Sort" json:"sort,omitempty" validate:"omitempty,required,gte=0,lte=4"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptorOrder, []int{8} }

func (m *ListRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRequest) GetSort() ListRequest_Sort {
	if m != nil {
		return m.Sort
	}
	return ListRequest_Natural
}

func init() {
	proto.RegisterType((*Order)(nil), "orderpb.order")
	proto.RegisterType((*OrderItem)(nil), "orderpb.orderItem")
	proto.RegisterType((*Shipping)(nil), "orderpb.shipping")
	proto.RegisterType((*Shipping_Address)(nil), "orderpb.shipping.Address")
	proto.RegisterType((*OrderList)(nil), "orderpb.orderList")
	proto.RegisterType((*NewRequest)(nil), "orderpb.newRequest")
	proto.RegisterType((*GetRequest)(nil), "orderpb.getRequest")
	proto.RegisterType((*PayRequest)(nil), "orderpb.payRequest")
	proto.RegisterType((*ReturnRequest)(nil), "orderpb.returnRequest")
	proto.RegisterType((*ListRequest)(nil), "orderpb.listRequest")
	proto.RegisterEnum("orderpb.OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterEnum("orderpb.OrderItem_Type", OrderItem_Type_name, OrderItem_Type_value)
	proto.RegisterEnum("orderpb.ListRequest_Sort", ListRequest_Sort_name, ListRequest_Sort_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Order service

type OrderClient interface {
	New(ctx context.Context, in *NewRequest, opts ...grpc.CallOption) (*Order, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Order, error)
	Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*Order, error)
	Return(ctx context.Context, in *ReturnRequest, opts ...grpc.CallOption) (*Order, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*OrderList, error)
}

type orderClient struct {
	cc *grpc.ClientConn
}

func NewOrderClient(cc *grpc.ClientConn) OrderClient {
	return &orderClient{cc}
}

func (c *orderClient) New(ctx context.Context, in *NewRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := grpc.Invoke(ctx, "/orderpb.Order/New", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := grpc.Invoke(ctx, "/orderpb.Order/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := grpc.Invoke(ctx, "/orderpb.Order/Pay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) Return(ctx context.Context, in *ReturnRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := grpc.Invoke(ctx, "/orderpb.Order/Return", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*OrderList, error) {
	out := new(OrderList)
	err := grpc.Invoke(ctx, "/orderpb.Order/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Order service

type OrderServer interface {
	New(context.Context, *NewRequest) (*Order, error)
	Get(context.Context, *GetRequest) (*Order, error)
	Pay(context.Context, *PayRequest) (*Order, error)
	Return(context.Context, *ReturnRequest) (*Order, error)
	List(context.Context, *ListRequest) (*OrderList, error)
}

func RegisterOrderServer(s *grpc.Server, srv OrderServer) {
	s.RegisterService(&_Order_serviceDesc, srv)
}

func _Order_New_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).New(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orderpb.Order/New",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).New(ctx, req.(*NewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orderpb.Order/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_Pay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).Pay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orderpb.Order/Pay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).Pay(ctx, req.(*PayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_Return_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReturnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).Return(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orderpb.Order/Return",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).Return(ctx, req.(*ReturnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orderpb.Order/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Order_serviceDesc = grpc.ServiceDesc{
	ServiceName: "orderpb.Order",
	HandlerType: (*OrderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "New",
			Handler:    _Order_New_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Order_Get_Handler,
		},
		{
			MethodName: "Pay",
			Handler:    _Order_Pay_Handler,
		},
		{
			MethodName: "Return",
			Handler:    _Order_Return_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Order_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order/orderpb/order.proto",
}

func init() { proto.RegisterFile("order/orderpb/order.proto", fileDescriptorOrder) }

var fileDescriptorOrder = []byte{
	// 1214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x4f, 0x8f, 0x1b, 0x35,
	0x14, 0xdf, 0xc9, 0x4c, 0xfe, 0xbd, 0xd0, 0x6d, 0xea, 0x96, 0x32, 0x1b, 0x95, 0x26, 0x75, 0xd5,
	0x25, 0x95, 0x76, 0xb3, 0xdd, 0xb4, 0x42, 0xab, 0x2d, 0x45, 0x6a, 0xca, 0x1f, 0x15, 0x95, 0xb2,
	0x9a, 0x52, 0x90, 0x10, 0x12, 0x72, 0xc6, 0x6e, 0xd6, 0x6a, 0x32, 0x33, 0xf5, 0x78, 0xb6, 0xe4,
	0xa3, 0x70, 0xe6, 0xc2, 0x57, 0xe0, 0xc0, 0x99, 0x6f, 0x91, 0x23, 0x1c, 0x91, 0x72, 0xe3, 0x86,
	0x6c, 0xcf, 0x4c, 0x26, 0xd9, 0xa4, 0xa0, 0x72, 0x49, 0xe6, 0xf9, 0xfd, 0x9e, 0xfd, 0xfc, 0xde,
	0xcf, 0x3f, 0x1b, 0x76, 0x42, 0x41, 0x99, 0x38, 0xd0, 0xbf, 0xd1, 0xd0, 0xfc, 0xf7, 0x22, 0x11,
	0xca, 0x10, 0x55, 0xd3, 0xc1, 0xd6, 0xfe, 0x88, 0xcb, 0xd3, 0x64, 0xd8, 0xf3, 0xc3, 0xc9, 0xc1,
	0x28, 0x1c, 0x85, 0x07, 0xda, 0x3f, 0x4c, 0x5e, 0x68, 0x4b, 0x1b, 0xfa, 0xcb, 0xc4, 0xb5, 0x8e,
	0x0a, 0x70, 0xca, 0x47, 0xa1, 0x24, 0xd9, 0x5f, 0x44, 0xa6, 0x13, 0x16, 0xc8, 0xec, 0x3f, 0x1a,
	0x66, 0x5f, 0x26, 0x12, 0xff, 0xec, 0x40, 0x59, 0x2f, 0x8a, 0xae, 0x43, 0x89, 0x53, 0xd7, 0xea,
	0x58, 0xdd, 0xfa, 0x60, 0x7b, 0x3e, 0x6b, 0xc3, 0x30, 0x0e, 0x83, 0x63, 0xfc, 0x03, 0xa7, 0xd8,
	0x2b, 0x71, 0x8a, 0xae, 0x42, 0x85, 0x4c, 0xc2, 0x24, 0x90, 0x6e, 0xa9, 0x63, 0x75, 0x6d, 0x2f,
	0xb5, 0xd0, 0x01, 0xd4, 0xfc, 0x44, 0x08, 0x16, 0xf8, 0x53, 0xd7, 0xee, 0x58, 0xdd, 0xed, 0xfe,
	0xe5, 0x5e, 0xbe, 0x5a, 0x2f, 0x73, 0x79, 0x39, 0x08, 0x75, 0xa1, 0xcc, 0x25, 0x9b, 0xc4, 0xae,
	0xd3, 0xb1, 0xbb, 0x8d, 0x3e, 0xea, 0xa5, 0x9b, 0x36, 0xff, 0x8f, 0x25, 0x9b, 0x78, 0x06, 0x80,
	0x8e, 0xa0, 0x36, 0x61, 0x92, 0x50, 0x22, 0x89, 0x5b, 0xd6, 0xe0, 0x6b, 0xcb, 0xe0, 0xde, 0x97,
	0xa9, 0xfb, 0xd3, 0x40, 0x8a, 0xa9, 0x97, 0xa3, 0xd1, 0x15, 0x28, 0xb3, 0x09, 0xe1, 0x63, 0xb7,
	0xa2, 0xf6, 0xe3, 0x19, 0x03, 0xb5, 0xa0, 0xe6, 0x9f, 0x12, 0x31, 0x62, 0x8f, 0xa9, 0x5b, 0xd5,
	0x8e, 0xdc, 0x46, 0xfb, 0x50, 0x79, 0x26, 0x89, 0x4c, 0x62, 0xb7, 0xa6, 0x37, 0xf1, 0xee, 0xca,
	0x4a, 0xb1, 0x76, 0x7a, 0x29, 0x08, 0xed, 0x43, 0x2d, 0x3e, 0xe5, 0x51, 0xc4, 0x83, 0x91, 0x5b,
	0xef, 0x58, 0xdd, 0x46, 0xff, 0x52, 0x1e, 0x90, 0x39, 0xbc, 0x1c, 0x82, 0x76, 0xa0, 0xea, 0x0b,
	0x46, 0x24, 0xa3, 0xee, 0x1f, 0x55, 0x5d, 0xbe, 0xcc, 0x56, 0xae, 0x24, 0xa2, 0xda, 0xf5, 0x67,
	0xea, 0x4a, 0xed, 0xd6, 0x7d, 0xb8, 0xb0, 0xb4, 0x41, 0xd4, 0x04, 0xfb, 0x25, 0x9b, 0x9a, 0x26,
	0x79, 0xea, 0x53, 0x6d, 0xf4, 0x8c, 0x8c, 0x13, 0xa6, 0x9b, 0x52, 0xf7, 0x8c, 0x71, 0x5c, 0x3a,
	0xb2, 0xf0, 0x17, 0x50, 0x31, 0x39, 0xa3, 0x06, 0x54, 0x1f, 0x99, 0xc5, 0x9a, 0x5b, 0xa8, 0x06,
	0xce, 0x09, 0xe1, 0xb4, 0x69, 0xa1, 0x77, 0xa0, 0xf6, 0x88, 0x04, 0x3e, 0x1b, 0x33, 0xda, 0x2c,
	0xa1, 0x0b, 0x50, 0xff, 0x2c, 0x19, 0xbf, 0xe0, 0x63, 0x65, 0xda, 0xca, 0xe9, 0x31, 0x99, 0x88,
	0x80, 0xd1, 0xa6, 0x83, 0x7f, 0xb1, 0xa1, 0x9e, 0x77, 0x07, 0x9d, 0x80, 0x23, 0xa7, 0x11, 0xd3,
	0x69, 0x6c, 0xf7, 0xdf, 0x3b, 0xdf, 0xbf, 0xde, 0xd7, 0xd3, 0x88, 0x0d, 0x6e, 0xce, 0x67, 0xed,
	0xf6, 0x19, 0x19, 0x73, 0xb5, 0x99, 0x63, 0x2c, 0xd8, 0xab, 0x84, 0x0b, 0x46, 0xf7, 0x46, 0x92,
	0x3d, 0x38, 0xdc, 0x1b, 0x4b, 0xf6, 0xe0, 0x1e, 0xf6, 0xf4, 0x4c, 0xe8, 0x18, 0x6a, 0xaf, 0x12,
	0x12, 0x48, 0x2e, 0xa7, 0x86, 0x5d, 0x83, 0xeb, 0xf3, 0x59, 0xbb, 0xb5, 0x08, 0x0e, 0x27, 0x8a,
	0x11, 0x91, 0x9c, 0xea, 0xe8, 0x3b, 0xd8, 0xcb, 0xf1, 0x05, 0x5e, 0xda, 0x4b, 0xbc, 0xfc, 0xb6,
	0xc0, 0x4b, 0x67, 0x23, 0x2f, 0x07, 0xbb, 0xf3, 0x59, 0x1b, 0x6f, 0x5a, 0xc8, 0xa4, 0x79, 0xd8,
	0x3f, 0xc2, 0x05, 0xfe, 0x7e, 0x08, 0x95, 0x88, 0x08, 0x16, 0x48, 0xb7, 0xac, 0x0f, 0xcb, 0xc6,
	0x54, 0x93, 0x84, 0xd3, 0x7b, 0xd8, 0x4b, 0xd1, 0xa8, 0x03, 0x0d, 0xca, 0x62, 0x5f, 0xf0, 0x48,
	0xf2, 0x30, 0x48, 0x99, 0x59, 0x1c, 0xc2, 0x03, 0x70, 0x54, 0xe5, 0x54, 0xf1, 0x05, 0x8b, 0x99,
	0x38, 0xd3, 0x1d, 0xab, 0x82, 0x1d, 0xbf, 0x4c, 0x4c, 0xc3, 0x28, 0x8f, 0x7d, 0xb5, 0xbb, 0x66,
	0x49, 0x0d, 0x4b, 0xf2, 0xa3, 0x69, 0x55, 0xc6, 0xb3, 0xa6, 0x83, 0x7f, 0x2f, 0x2d, 0x4c, 0x84,
	0xc0, 0x09, 0xc8, 0x84, 0xa5, 0x84, 0xd1, 0xdf, 0x8a, 0x31, 0xd1, 0x69, 0x18, 0xe4, 0x8c, 0xd1,
	0x06, 0xba, 0x0b, 0x55, 0x42, 0xa9, 0x60, 0x71, 0xac, 0xcb, 0xd8, 0xe8, 0xef, 0x9c, 0xa3, 0x73,
	0xef, 0xa1, 0x01, 0x78, 0x19, 0x12, 0xb9, 0x50, 0xf5, 0x89, 0x10, 0x9c, 0x09, 0x5d, 0xe1, 0xba,
	0x97, 0x99, 0x68, 0x17, 0xb6, 0xa5, 0x20, 0xfe, 0x4b, 0x1e, 0x8c, 0x9e, 0x26, 0x93, 0x21, 0x13,
	0xa6, 0x56, 0xde, 0xca, 0x68, 0xeb, 0x27, 0x0b, 0xaa, 0xe9, 0xb4, 0x2a, 0xb1, 0x31, 0x0f, 0xd8,
	0x61, 0x9a, 0xad, 0x31, 0xd4, 0x16, 0xfc, 0x8c, 0x16, 0x75, 0x4f, 0x7f, 0xeb, 0x75, 0x55, 0x15,
	0x84, 0x51, 0x1c, 0xb5, 0xae, 0x31, 0xb3, 0x39, 0xfa, 0x69, 0x3e, 0xc6, 0x40, 0xd7, 0x01, 0xa2,
	0x30, 0x96, 0x64, 0xfc, 0x28, 0xa4, 0x2c, 0xcd, 0xa4, 0x30, 0xa2, 0xa2, 0xd4, 0x51, 0x61, 0x99,
	0x5a, 0x68, 0x03, 0x3f, 0x4e, 0x39, 0xff, 0x84, 0xc7, 0x12, 0xed, 0x42, 0x45, 0x1b, 0xb1, 0x6b,
	0x69, 0x21, 0xda, 0x5e, 0x66, 0xbd, 0x97, 0x7a, 0xd5, 0x54, 0x32, 0x94, 0x64, 0xac, 0xf3, 0x2d,
	0x7b, 0xc6, 0xc0, 0xbf, 0xda, 0x00, 0x01, 0x7b, 0xed, 0xb1, 0x57, 0x09, 0x8b, 0x25, 0xfa, 0xa6,
	0x40, 0x4d, 0x6b, 0x33, 0x35, 0x6f, 0xcd, 0x67, 0xed, 0x1b, 0x6f, 0x3c, 0x40, 0x2b, 0xcc, 0x7c,
	0x96, 0x29, 0x6b, 0x69, 0x93, 0xb2, 0x0e, 0x6e, 0xcf, 0x67, 0xed, 0x5b, 0x46, 0xd9, 0x35, 0x14,
	0x77, 0x16, 0x0b, 0x50, 0x7e, 0xc6, 0xf6, 0xb2, 0x55, 0x70, 0x26, 0xc2, 0x0f, 0x0a, 0x22, 0x6c,
	0xeb, 0x79, 0x6f, 0xe4, 0xf3, 0x2e, 0xf6, 0xb4, 0x51, 0x89, 0xef, 0x65, 0x4a, 0xec, 0xbc, 0xf9,
	0xb0, 0x68, 0x10, 0xce, 0x94, 0xfa, 0x49, 0x41, 0x5e, 0xcb, 0x1b, 0xe4, 0x75, 0xf0, 0xfe, 0x7c,
	0xd6, 0xde, 0x59, 0x37, 0x97, 0xda, 0x08, 0x5e, 0xa8, 0xef, 0xff, 0xd3, 0xd1, 0xfb, 0x00, 0x23,
	0x26, 0xb3, 0xd6, 0xed, 0x17, 0x6e, 0xc9, 0x95, 0xf5, 0xf5, 0x71, 0x2f, 0xd4, 0xaf, 0xc4, 0x29,
	0xfe, 0xcb, 0x02, 0x88, 0xc8, 0xf4, 0xed, 0xa2, 0xd1, 0x43, 0x70, 0x7c, 0x22, 0xa8, 0xce, 0xa9,
	0xd1, 0xbf, 0x58, 0xe4, 0x08, 0x11, 0x74, 0x70, 0x6d, 0x3e, 0x6b, 0xbb, 0x1b, 0xdb, 0xa7, 0x43,
	0x51, 0x08, 0x97, 0xd2, 0xa8, 0x13, 0x11, 0x9e, 0x71, 0x45, 0x03, 0x9a, 0x5e, 0xd3, 0xd7, 0x0a,
	0xf3, 0x9d, 0xc3, 0xfc, 0x07, 0xf5, 0x3e, 0xc4, 0xde, 0xf9, 0xb9, 0xf1, 0xc7, 0x70, 0x41, 0xe8,
	0x8b, 0xe3, 0x2d, 0x2b, 0xf6, 0x5b, 0x09, 0x1a, 0x63, 0x1e, 0xe7, 0x05, 0xbf, 0x0f, 0x4e, 0x44,
	0x46, 0x46, 0xc2, 0xec, 0xc1, 0x07, 0xf3, 0x59, 0xfb, 0xe6, 0xba, 0x96, 0x2f, 0xe5, 0x77, 0x07,
	0x7b, 0x3a, 0x08, 0x7d, 0xa4, 0xe4, 0x60, 0xc2, 0xd3, 0x27, 0xcb, 0x66, 0xad, 0x2f, 0x44, 0xab,
	0x60, 0x13, 0x84, 0xbe, 0x07, 0x27, 0x0e, 0x85, 0x4c, 0xcb, 0xb5, 0x10, 0xc4, 0x42, 0x7a, 0xbd,
	0x67, 0xa1, 0x90, 0x83, 0xfd, 0xf9, 0xac, 0x7d, 0xfb, 0xdf, 0xb3, 0xca, 0xef, 0x3c, 0x35, 0x2b,
	0x7e, 0x0e, 0x8e, 0x0a, 0x56, 0xb7, 0xf3, 0x53, 0x22, 0x13, 0x41, 0xc6, 0xcd, 0x2d, 0x74, 0x11,
	0x1a, 0xe9, 0x55, 0xfd, 0x09, 0x8b, 0xfd, 0xa6, 0x85, 0xb6, 0x01, 0xd2, 0x81, 0x87, 0xb1, 0xdf,
	0x2c, 0x29, 0xc0, 0x73, 0xf3, 0x3a, 0xd0, 0x00, 0x5b, 0x01, 0xd2, 0x01, 0x05, 0x70, 0xfa, 0x7f,
	0x5b, 0x50, 0xfe, 0x4a, 0x3f, 0xe8, 0xf6, 0xc0, 0x7e, 0xca, 0x5e, 0xa3, 0xcb, 0x6b, 0x4e, 0x6b,
	0x6b, 0x45, 0xbe, 0xf0, 0x96, 0x42, 0x7f, 0xce, 0x64, 0x01, 0xbd, 0x20, 0xfd, 0x7a, 0xf4, 0x09,
	0x99, 0x16, 0xd0, 0x0b, 0x92, 0xaf, 0x41, 0xf7, 0xa1, 0x62, 0x1e, 0x13, 0xe8, 0x6a, 0xee, 0x5b,
	0x22, 0xc9, 0xda, 0x18, 0x47, 0x0b, 0xef, 0x95, 0x75, 0x65, 0x6f, 0xad, 0x48, 0x9b, 0x42, 0xe2,
	0xad, 0x41, 0xf7, 0xbb, 0xdd, 0x8d, 0x0f, 0xe1, 0xa5, 0x47, 0xf7, 0xb0, 0xa2, 0x5f, 0xbf, 0x77,
	0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x11, 0x82, 0xfc, 0x8c, 0x0b, 0x00, 0x00,
}
