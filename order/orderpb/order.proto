//     Digota <http://digota.com> - eCommerce microservice
//     Copyright (C) 2017  Yaron Sumel <yaron@digota.com>. All Rights Reserved.
//
//     This program is free software: you can redistribute it and/or modify
//     it under the terms of the GNU Affero General Public License as published
//     by the Free Software Foundation, either version 3 of the License, or
//     (at your option) any later version.
//
//     This program is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU Affero General Public License for more details.
//
//     You should have received a copy of the GNU Affero General Public License
//     along with this program.  If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

option go_package = "github.com/digota/digota/order/orderpb";

package orderpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/digota/digota/payment/paymentpb/payment.proto";

service Order {
    rpc New (newRequest) returns (order) {
    }
    rpc Get (getRequest) returns (order) {
    }
    rpc Pay (payRequest) returns (order) {
    }
    rpc Return (returnRequest) returns (order) {
    }
    rpc List (listRequest) returns (orderList) {
    }
}

message order {
    string id = 1 [(gogoproto.moretags) = "bson:\"_id\""];
    int64 amount = 2;
    paymentpb.currency currency = 3;
    repeated orderItem items = 4;
    map<string, string> metadata = 5;
    string email = 6;
    string chargeId = 7;
    status Status = 8;
    enum status {
        Created = 0;
        Paid = 1;
        Canceled = 2;
        Fulfilled = 3;
        Returned = 4;
    }
    shipping shipping = 9;
    int64 created = 998;
    int64 updated = 999;
}

message orderItem {
    Type type = 1 [(gogoproto.moretags) = "validate:\"required,gte=1,lte=4\""];
    enum Type {
        reserved = 0;
        sku = 1;
        discount = 2;
        tax = 3;
        shipping = 4;
    }
    int64 quantity = 2 [(gogoproto.moretags) = "validate:\"omitempty,gte=0\""];
    int64 amount = 3;
    paymentpb.currency currency = 4 [(gogoproto.moretags) = "validate:\"omitempty,gte=1,lte=128\""];
    string parent = 5 [(gogoproto.moretags) = "validate:\"omitempty,uuid4\""];
    string description = 6;
}

message shipping {
    string name = 1;
    string phone = 2;
    Address address = 3;
    string carrier = 4;
    string trackingNumber = 5;
    message Address {
        string line1 = 1;
        string city = 2;
        string country = 3;
        string line2 = 4;
        string postalCode = 5;
        string state = 6;
    }
}

message orderList {
    repeated order orders = 1;
    int32 total = 2;
}

// requests

message newRequest {
    paymentpb.currency currency = 1 [(gogoproto.moretags) = "validate:\"required,gte=1,lte=128\""];
    repeated orderItem items = 2 [(gogoproto.moretags) = "bson:\"items\" validate:\"dive,required\""];
    map<string, string> metadata = 3;
    string email = 4 [(gogoproto.moretags) = "validate:\"omitempty,email\""];
    shipping shipping = 5 [(gogoproto.moretags) = "validate:\"omitempty,dive\""];
}

message getRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"uuid4,required\""];
}

message payRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"uuid4,required\""];
    paymentpb.card card = 2 [(gogoproto.moretags) = "validate:\"dive,required\""];
    paymentpb.paymentProviderId paymentProviderId = 3 [(gogoproto.moretags) = "validate:\"required,gte=1,lte=1\""];
}

message returnRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"uuid4,required\""];
}

message listRequest {
    int64 page = 1 [(gogoproto.moretags) = "validate:\"omitempty,required,gte=0\""];
    int64 limit = 2 [(gogoproto.moretags) = "validate:\"omitempty,required,gt=0\""];
    Sort sort = 3 [(gogoproto.moretags) = "validate:\"omitempty,required,gte=0,lte=4\""];
    enum Sort {
        Natural = 0;
        CreatedDesc = 1;
        CreatedAsc = 2;
        UpdatedDesc = 3;
        UpdatedAsc = 4;
    }
}
