// Digota <http://digota.com> - eCommerce microservice
// Copyright (c) 2018 Yaron Sumel <yaron@digota.com>
//
// MIT License
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

option go_package = "github.com/digota/digota/sku/skupb";

package skupb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/digota/digota/payment/paymentpb/payment.proto";

service SkuService {
    rpc New (NewRequest) returns (Sku) {
    }
    rpc Get (GetRequest) returns (Sku) {
    }
    rpc Update (UpdateRequest) returns (Sku) {
    }
    rpc Delete (DeleteRequest) returns (Empty) {
    }
    rpc List (ListRequest) returns (SkuList) {
    }
}

message Empty {
}

message Sku {
    string id = 1 [(gogoproto.moretags) = "bson:\"_id\""];
    string name = 2;
    uint64 price = 3;
    paymentpb.Currency currency = 4;
    bool active = 5;
    string parent = 6;
    map<string, string> metadata = 7;
    map<string, string> attributes = 8;
    string image = 9;
    PackageDimensions packageDimensions = 10;
    Inventory inventory = 11;
    int64 created = 998;
    int64 updated = 999;
}

message Inventory {
    int64 quantity = 1 [(gogoproto.moretags) = "validate:\"omitempty,gte=0\""];
    Type type = 2 [(gogoproto.moretags) = "validate:\"omitempty,required,gte=0,lte=1\""];
    enum Type {
        Infinite = 0;
        Finite = 1;
    }
}

message PackageDimensions {
    double height = 1 [(gogoproto.moretags) = "validate:\"required,gt=0\""];
    double length = 2 [(gogoproto.moretags) = "validate:\"required,gt=0\""];
    double weight = 3 [(gogoproto.moretags) = "validate:\"required,gt=0\""];
    double width = 4 [(gogoproto.moretags) = "validate:\"required,gt=0\""];
}

message NewRequest {
    string name = 1 [(gogoproto.moretags) = "validate:\"required,gt=0\""];
    paymentpb.Currency currency = 2 [(gogoproto.moretags) = "validate:\"omitempty,required,gte=0,lte=128\""];
    bool active = 3 [(gogoproto.moretags) = "validate:\"required\""];
    uint64 price = 4 [(gogoproto.moretags) = "validate:\"required,gte=0\""];
    string parent = 5 [(gogoproto.moretags) = "validate:\"required,uuid4\""];
    map<string, string> metadata = 6;
    string image = 7 [(gogoproto.moretags) = "validate:\"url\""];
    PackageDimensions packageDimensions = 8 [(gogoproto.moretags) = "validate:\"omitempty,dive\""];
    Inventory inventory = 9 [(gogoproto.moretags) = "validate:\"required,dive\""];
    map<string, string> attributes = 10;
}

message GetRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"required,uuid4\""];
}

message DeleteRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"required,uuid4\""];
}

message UpdateRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"required,uuid4\""];
    string name = 2 [(gogoproto.moretags) = "validate:\"omitempty,gt=0\""];
    paymentpb.Currency currency = 3 [(gogoproto.moretags) = "validate:\"omitempty,required,gte=0,lte=128\""];
    bool active = 4;
    uint64 price = 5 [(gogoproto.moretags) = "validate:\"omitempty,gte=0\""];
    string parent = 6 [(gogoproto.moretags) = "validate:\"omitempty,uuid4\""];
    map<string, string> metadata = 7;
    string image = 8 [(gogoproto.moretags) = "validate:\"omitempty,url\""];
    PackageDimensions packageDimensions = 9 [(gogoproto.moretags) = "validate:\"omitempty,dive\""];
    Inventory inventory = 10 [(gogoproto.moretags) = "validate:\"omitempty,dive\""];
    map<string, string> attributes = 11;
}

message SkuList {
    repeated Sku orders = 1;
    int32 total = 2;
}

message ListRequest {
    int64 page = 1 [(gogoproto.moretags) = "validate:\"omitempty,required,gte=0\""];
    int64 limit = 2 [(gogoproto.moretags) = "validate:\"omitempty,required,gt=0\""];
    Sort sort = 3 [(gogoproto.moretags) = "validate:\"omitempty,required,gte=0,lte=4\""];
    enum Sort {
        Natural = 0;
        CreatedDesc = 1;
        CreatedAsc = 2;
        UpdatedDesc = 3;
        UpdatedAsc = 4;
    }
}